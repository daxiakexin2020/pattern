# 工厂方法模式
# 需要定义一个业务抽象类，定义每个具体业务必须实现的方法
# 需要定义一个工厂抽象类，定义每个具体工厂必须实现的方法
# 一个产品/业务  一般对应一个业务类，同时对应一个相应的工厂类
# 客户端使用时，直接调用具体的工厂类即可，具体工厂类会返回响应的业务类
# 缺点
# 客户端需要知道所有的具体工厂类
#例如
//TODO 使用cat工厂
$catFactory = new CatFactory();

//TODO 返回cat业务类，直接调用cay行为
$catFactory->operation()->cry();

